{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\William\\\\Downloads\\\\JobQuest0\\\\html-a-react\\\\src\\\\pages\\\\Fases.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"../App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fases = [{\n  nombre: \"Pre-entrevista\",\n  preguntas: [{\n    tipo: \"texto\",\n    texto: \"Nombre completo\"\n  }, {\n    tipo: \"texto\",\n    texto: \"¿Cuál es su edad?\"\n  }, {\n    tipo: \"radio\",\n    texto: \"Género\",\n    opciones: [\"Masculino\", \"Femenino\", \"Otro\"]\n  }, {\n    tipo: \"texto\",\n    texto: \"¿Cuál es tu lugar de residencia actual?\"\n  }, {\n    tipo: \"radio\",\n    texto: \"¿Cuál es tu estado civil?\",\n    opciones: [\"Soltero/a\", \"Casado/a\", \"Divorciado/a\", \"Viudo/a\"]\n  }, {\n    tipo: \"texto\",\n    texto: \"¿Tienes hijos?, ¿Cuántos y qué edades tienen?\"\n  }, {\n    tipo: \"texto\",\n    texto: \"¿Cuántas personas viven en tu hogar actualmente?\"\n  }, {\n    tipo: \"texto\",\n    texto: \"¿Tienes tatuajes? Si es así describe su ubicación\"\n  }, {\n    tipo: \"texto\",\n    texto: \"¿Tienes pircings? Si es así describe su ubicación\"\n  }, {\n    tipo: \"texto\",\n    texto: \"¿Qué te motiva o te inspira para seguir adelante?\"\n  }, {\n    tipo: \"texto\",\n    texto: \"¿Hablas algún otro idioma?, ¿Cómo lo manejas?\"\n  }, {\n    tipo: \"texto\",\n    texto: \"¿Tienes licencia de conducir?, ¿Qué tipo?\"\n  }]\n}, {\n  nombre: \"Entrevista Psicológica\",\n  preguntas: [{\n    tipo: \"texto\",\n    texto: \"¿Algún error importante que hayas cometido?\"\n  }, {\n    tipo: \"texto\",\n    texto: \"¿Cómo gestionas el estrés o la presión?\"\n  }, {\n    tipo: \"texto\",\n    texto: \"Describe un desafío significativo que hayas enfrentado\"\n  }, {\n    tipo: \"texto\",\n    texto: \"¿Cómo mantienes una actitud positiva ante percances?\"\n  }, {\n    tipo: \"texto\",\n    texto: \"¿Cómo reaccionas ante los fracasos?\"\n  }, {\n    tipo: \"texto\",\n    texto: \"¿Qué tipo de ambiente te hace sentir más productivo?\"\n  }, {\n    tipo: \"texto\",\n    texto: \"¿Cómo resuelves problemas complejos?\"\n  }, {\n    tipo: \"texto\",\n    texto: \"Describe un error importante que has cometido\"\n  }, {\n    tipo: \"texto\",\n    texto: \"¿Cómo manejas las críticas injustas?\"\n  }, {\n    tipo: \"texto\",\n    texto: \"¿Qué haces si no estás de acuerdo con tu superior?\"\n  }, {\n    tipo: \"texto\",\n    texto: \"¿Cómo manejas los cambios inesperados en el trabajo?\"\n  }]\n}, {\n  nombre: \"Experiencia Laboral\",\n  preguntas: [{\n    tipo: \"texto\",\n    texto: \"¿Cuál ha sido tu mayor logro profesional o académico?\"\n  }, {\n    tipo: \"texto\",\n    texto: \"¿Cómo aseguras la calidad de tu trabajo?\"\n  }, {\n    tipo: \"texto\",\n    texto: \"Describe tu experiencia laboral más relevante\"\n  }, {\n    tipo: \"texto\",\n    texto: \"¿Qué habilidades desarrollaste en tu último empleo?\"\n  }, {\n    tipo: \"texto\",\n    texto: \"¿Cómo gestionas interrupciones en la jornada laboral?\"\n  }, {\n    tipo: \"texto\",\n    texto: \"¿Cómo organizas tus prioridades y tareas?\"\n  }, {\n    tipo: \"texto\",\n    texto: \"¿Qué estrategia usas para mantener la concentración?\"\n  }, {\n    tipo: \"texto\",\n    texto: \"¿Tenías buena relación con compañeros y jefes?\"\n  }, {\n    tipo: \"texto\",\n    texto: \"¿Cómo manejas información confidencial?\"\n  }, {\n    tipo: \"texto\",\n    texto: \"¿Manejas bien entregas urgentes de trabajo?\"\n  }, {\n    tipo: \"texto\",\n    texto: \"¿Has capacitado a otras personas?\"\n  }]\n}, {\n  nombre: \"Puesto y la Empresa\",\n  preguntas: [{\n    tipo: \"texto\",\n    texto: \"¿Qué te atrae de esta oportunidad laboral?\"\n  }, {\n    tipo: \"texto\",\n    texto: \"¿Cómo encajan tus habilidades en este puesto?\"\n  }, {\n    tipo: \"texto\",\n    texto: \"¿Qué valor crees aportar a la empresa?\"\n  }, {\n    tipo: \"texto\",\n    texto: \"¿Cómo priorizas objetivos ante múltiples tareas?\"\n  }, {\n    tipo: \"texto\",\n    texto: \"¿Qué impacto esperas tener el primer año?\"\n  }, {\n    tipo: \"texto\",\n    texto: \"¿Qué es lo más importante en tu próximo empleo?\"\n  }, {\n    tipo: \"texto\",\n    texto: \"¿Qué expectativas tienes de nuestra empresa?\"\n  }, {\n    tipo: \"texto\",\n    texto: \"¿Cómo te adaptarías a este estilo de rol?\"\n  }, {\n    tipo: \"texto\",\n    texto: \"¿Cómo defines un entorno de trabajo ideal?\"\n  }, {\n    tipo: \"texto\",\n    texto: \"¿Cómo manejas la expectativa de tu supervisor?\"\n  }, {\n    tipo: \"texto\",\n    texto: \"¿Qué tomarías en cuenta sobre tu próximo empleo?\"\n  }]\n}];\nconst EntrevistaFases = () => {\n  _s();\n  const [faseActual, setFaseActual] = useState(0);\n  const [respuestas, setRespuestas] = useState({});\n  const [errores, setErrores] = useState([]);\n  const [mostrarResumen, setMostrarResumen] = useState(false);\n  useEffect(() => {\n    fetch(\"\").then(res => res.json()).then(data => {\n      const faseInicial = data.faseActual || 0;\n      if (faseInicial < fases.length) {\n        setFaseActual(faseInicial);\n      } else {\n        setFaseActual(0); // O manejar el error de otra manera\n      }\n    });\n  }, []);\n  useEffect(() => {\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\"\n    });\n  }, [faseActual]);\n  const handleRespuesta = (faseIndex, preguntaIndex, valor) => {\n    setRespuestas(prev => ({\n      ...prev,\n      [`${faseIndex}-${preguntaIndex}`]: valor\n    }));\n  };\n  const validarRespuestas = () => {\n    const preguntas = fases[faseActual].preguntas;\n    const erroresTemp = [];\n    preguntas.forEach((_, i) => {\n      const valor = respuestas[`${faseActual}-${i}`];\n      if (!valor || valor.trim() === \"\") {\n        erroresTemp.push(i);\n      }\n    });\n    setErrores(erroresTemp);\n    return erroresTemp.length === 0;\n  };\n  const avanzar = () => {\n    if (!validarRespuestas()) return;\n    const nuevaFase = faseActual + 1;\n    if (nuevaFase >= fases.length) {\n      setMostrarResumen(true);\n      return;\n    }\n    fetch(\"\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        faseActual: nuevaFase\n      })\n    }).then(() => {\n      setFaseActual(nuevaFase);\n      setErrores([]);\n    });\n  };\n  const retroceder = () => {\n    const nuevaFase = faseActual - 1;\n    fetch(\"\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        faseActual: nuevaFase\n      })\n    }).then(() => {\n      setFaseActual(nuevaFase);\n      setErrores([]);\n    });\n  };\n  if (mostrarResumen) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          color: \"#073239\",\n          fontFamily: \"'EB Garamond', serif\"\n        },\n        children: \"Gracias por completar la entrevista\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontFamily: \"'EB Garamond', serif\"\n        },\n        children: \"Tu informaci\\xF3n ha sido registrada. Pronto te contactaremos.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this);\n  }\n  const fase = fases[faseActual];\n\n  // Verificar si la fase es válida\n  if (!fase) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Error: Fase no encontrada.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: \"#bdbaba\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      style: {\n        padding: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: \"#18323f\",\n          fontFamily: \"'EB Garamond', serif\"\n        },\n        children: [\"Fase \", faseActual + 1, \": \", fase.nombre]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"preguntas\",\n        style: {\n          backgroundColor: \"#bdbaba\",\n          padding: \"20px\",\n          borderRadius: \"5px\",\n          color: \"#f1a523\"\n        },\n        children: fase.preguntas.map((pregunta, i) => {\n          const key = `${faseActual}-${i}`;\n          const valor = respuestas[key] || \"\";\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: 20,\n              backgroundColor: \"#30685d\",\n              // nuevo fondo de la tarjeta\n              padding: \"20px\",\n              borderRadius: \"5px\",\n              boxShadow: \"0 2px 5px rgba(0,0,0,0.1)\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                style: {\n                  color: \"#18323f\",\n                  // gris claro para el título\n                  fontFamily: \"'EB Garamond', serif\"\n                },\n                children: [\"Pregunta \", i + 1, \" de \", fase.preguntas.length]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 6\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 3\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                color: \"#073239\",\n                // blanco para la pregunta\n                fontFamily: \"'EB Garamond', serif\"\n              },\n              children: pregunta.texto\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 3\n            }, this), pregunta.tipo === \"texto\" && /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: `campo ${errores.includes(i) ? \"error\" : \"\"}`,\n              value: valor,\n              onChange: e => handleRespuesta(faseActual, i, e.target.value),\n              style: {\n                width: \"100%\",\n                padding: \"10px\",\n                borderRadius: \"5px\",\n                border: `1px solid ${errores.includes(i) ? \"red\" : \"#ccc\"}`,\n                marginTop: \"5px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 19\n            }, this), pregunta.tipo === \"seleccion\" && /*#__PURE__*/_jsxDEV(\"select\", {\n              className: `campo ${errores.includes(i) ? \"error\" : \"\"}`,\n              value: valor,\n              onChange: e => handleRespuesta(faseActual, i, e.target.value),\n              style: {\n                width: \"100%\",\n                padding: \"10px\",\n                borderRadius: \"5px\",\n                border: `1px solid ${errores.includes(i) ? \"red\" : \"#ccc\"}`,\n                marginTop: \"5px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"-- Selecciona --\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 21\n              }, this), pregunta.opciones.map((op, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: op,\n                children: op\n              }, idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 23\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 19\n            }, this), pregunta.tipo === \"radio\" && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: pregunta.opciones.map((op, idx) => /*#__PURE__*/_jsxDEV(\"label\", {\n                style: {\n                  display: \"block\",\n                  marginTop: \"5px\",\n                  color: \"#073239\",\n                  fontFamily: \"'EB Garamond', serif\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  name: key,\n                  value: op,\n                  checked: valor === op,\n                  onChange: () => handleRespuesta(faseActual, i, op)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 25\n                }, this), op]\n              }, idx, true, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 19\n            }, this), errores.includes(i) && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error-text\",\n              style: {\n                color: \"red\"\n              },\n              children: \"Esta pregunta es obligatoria\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 19\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 1\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"botones\",\n        style: {\n          marginTop: \"20px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"boton\",\n          onClick: retroceder,\n          disabled: faseActual === 0,\n          style: {\n            marginRight: \"10px\",\n            padding: \"10px 20px\",\n            backgroundColor: \"#fddd92\",\n            border: \"none\",\n            borderRadius: \"5px\",\n            cursor: \"pointer\",\n            transition: \"background-color 0.3s\"\n          },\n          children: \"Anterior\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"boton\",\n          onClick: avanzar,\n          style: {\n            padding: \"10px 20px\",\n            backgroundColor: \"#fddd92\",\n            border: \"none\",\n            borderRadius: \"5px\",\n            cursor: \"pointer\",\n            transition: \"background-color 0.3s\"\n          },\n          children: faseActual === fases.length - 1 ? \"Finalizar\" : \"Siguiente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"boton\",\n          onClick: () => {\n            fetch(\"\", {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                faseActual\n              })\n            });\n            alert(\"Progreso guardado. Puedes continuar más tarde.\");\n          },\n          style: {\n            marginLeft: \"10px\",\n            padding: \"10px 20px\",\n            backgroundColor: \"#fddd92\",\n            border: \"none\",\n            borderRadius: \"5px\",\n            cursor: \"pointer\",\n            transition: \"background-color 0.3s\"\n          },\n          children: \"Salir\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 5\n  }, this);\n};\n_s(EntrevistaFases, \"5mz8Y4NH5+Gv8VMTJBzNQ7V2h20=\");\n_c = EntrevistaFases;\nexport default EntrevistaFases;\nvar _c;\n$RefreshReg$(_c, \"EntrevistaFases\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","fases","nombre","preguntas","tipo","texto","opciones","EntrevistaFases","_s","faseActual","setFaseActual","respuestas","setRespuestas","errores","setErrores","mostrarResumen","setMostrarResumen","fetch","then","res","json","data","faseInicial","length","window","scrollTo","top","behavior","handleRespuesta","faseIndex","preguntaIndex","valor","prev","validarRespuestas","erroresTemp","forEach","_","i","trim","push","avanzar","nuevaFase","method","headers","body","JSON","stringify","retroceder","className","children","style","color","fontFamily","fileName","_jsxFileName","lineNumber","columnNumber","fase","backgroundColor","padding","borderRadius","map","pregunta","key","marginBottom","boxShadow","type","includes","value","onChange","e","target","width","border","marginTop","op","idx","display","name","checked","onClick","disabled","marginRight","cursor","transition","alert","marginLeft","_c","$RefreshReg$"],"sources":["C:/Users/William/Downloads/JobQuest0/html-a-react/src/pages/Fases.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"../App.css\";\r\n\r\nconst fases = [\r\n  {\r\n    nombre: \"Pre-entrevista\",\r\n    preguntas: [\r\n      { tipo: \"texto\", texto: \"Nombre completo\" },\r\n      { tipo: \"texto\", texto: \"¿Cuál es su edad?\" },\r\n      {\r\n        tipo: \"radio\",\r\n        texto: \"Género\",\r\n        opciones: [\"Masculino\", \"Femenino\", \"Otro\"]\r\n      },\r\n      { tipo: \"texto\", texto: \"¿Cuál es tu lugar de residencia actual?\" },\r\n      {\r\n        tipo: \"radio\",\r\n        texto: \"¿Cuál es tu estado civil?\",\r\n        opciones: [\"Soltero/a\", \"Casado/a\", \"Divorciado/a\", \"Viudo/a\"]\r\n      },\r\n      { tipo: \"texto\", texto: \"¿Tienes hijos?, ¿Cuántos y qué edades tienen?\" },\r\n      { tipo: \"texto\", texto: \"¿Cuántas personas viven en tu hogar actualmente?\" },\r\n      { tipo: \"texto\", texto: \"¿Tienes tatuajes? Si es así describe su ubicación\" },\r\n      { tipo: \"texto\", texto: \"¿Tienes pircings? Si es así describe su ubicación\" },\r\n      { tipo: \"texto\", texto: \"¿Qué te motiva o te inspira para seguir adelante?\" },\r\n      { tipo: \"texto\", texto: \"¿Hablas algún otro idioma?, ¿Cómo lo manejas?\" },\r\n      { tipo: \"texto\", texto: \"¿Tienes licencia de conducir?, ¿Qué tipo?\" }\r\n    ]\r\n  },\r\n  {\r\n    nombre: \"Entrevista Psicológica\",\r\n    preguntas: [\r\n      { tipo: \"texto\", texto: \"¿Algún error importante que hayas cometido?\" },\r\n      { tipo: \"texto\", texto: \"¿Cómo gestionas el estrés o la presión?\" },\r\n      { tipo: \"texto\", texto: \"Describe un desafío significativo que hayas enfrentado\" },\r\n      { tipo: \"texto\", texto: \"¿Cómo mantienes una actitud positiva ante percances?\" },\r\n      { tipo: \"texto\", texto: \"¿Cómo reaccionas ante los fracasos?\" },\r\n      { tipo: \"texto\", texto: \"¿Qué tipo de ambiente te hace sentir más productivo?\" },\r\n      { tipo: \"texto\", texto: \"¿Cómo resuelves problemas complejos?\" },\r\n      { tipo: \"texto\", texto: \"Describe un error importante que has cometido\" },\r\n      { tipo: \"texto\", texto: \"¿Cómo manejas las críticas injustas?\" },\r\n      { tipo: \"texto\", texto: \"¿Qué haces si no estás de acuerdo con tu superior?\" },\r\n      { tipo: \"texto\", texto: \"¿Cómo manejas los cambios inesperados en el trabajo?\" }\r\n    ]\r\n  },\r\n  {\r\n    nombre: \"Experiencia Laboral\",\r\n    preguntas: [\r\n      { tipo: \"texto\", texto: \"¿Cuál ha sido tu mayor logro profesional o académico?\" },\r\n      { tipo: \"texto\", texto: \"¿Cómo aseguras la calidad de tu trabajo?\" },\r\n      { tipo: \"texto\", texto: \"Describe tu experiencia laboral más relevante\" },\r\n      { tipo: \"texto\", texto: \"¿Qué habilidades desarrollaste en tu último empleo?\" },\r\n      { tipo: \"texto\", texto: \"¿Cómo gestionas interrupciones en la jornada laboral?\" },\r\n      { tipo: \"texto\", texto: \"¿Cómo organizas tus prioridades y tareas?\" },\r\n      { tipo: \"texto\", texto: \"¿Qué estrategia usas para mantener la concentración?\" },\r\n      { tipo: \"texto\", texto: \"¿Tenías buena relación con compañeros y jefes?\" },\r\n      { tipo: \"texto\", texto: \"¿Cómo manejas información confidencial?\" },\r\n      { tipo: \"texto\", texto: \"¿Manejas bien entregas urgentes de trabajo?\" },\r\n      { tipo: \"texto\", texto: \"¿Has capacitado a otras personas?\" }\r\n    ]\r\n  },\r\n  {\r\n    nombre: \"Puesto y la Empresa\",\r\n    preguntas: [\r\n      { tipo: \"texto\", texto: \"¿Qué te atrae de esta oportunidad laboral?\" },\r\n      { tipo: \"texto\", texto: \"¿Cómo encajan tus habilidades en este puesto?\" },\r\n      { tipo: \"texto\", texto: \"¿Qué valor crees aportar a la empresa?\" },\r\n      { tipo: \"texto\", texto: \"¿Cómo priorizas objetivos ante múltiples tareas?\" },\r\n      { tipo: \"texto\", texto: \"¿Qué impacto esperas tener el primer año?\" },\r\n      { tipo: \"texto\", texto: \"¿Qué es lo más importante en tu próximo empleo?\" },\r\n      { tipo: \"texto\", texto: \"¿Qué expectativas tienes de nuestra empresa?\" },\r\n      { tipo: \"texto\", texto: \"¿Cómo te adaptarías a este estilo de rol?\" },\r\n      { tipo: \"texto\", texto: \"¿Cómo defines un entorno de trabajo ideal?\" },\r\n      { tipo: \"texto\", texto: \"¿Cómo manejas la expectativa de tu supervisor?\" },\r\n      { tipo: \"texto\", texto: \"¿Qué tomarías en cuenta sobre tu próximo empleo?\" }\r\n    ]\r\n  }\r\n];\r\n\r\nconst EntrevistaFases = () => {\r\n  const [faseActual, setFaseActual] = useState(0);\r\n  const [respuestas, setRespuestas] = useState({});\r\n  const [errores, setErrores] = useState([]);\r\n  const [mostrarResumen, setMostrarResumen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetch(\"\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        const faseInicial = data.faseActual || 0;\r\n        if (faseInicial < fases.length) {\r\n          setFaseActual(faseInicial);\r\n        } else {\r\n          setFaseActual(0); // O manejar el error de otra manera\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n  }, [faseActual]);\r\n\r\n  const handleRespuesta = (faseIndex, preguntaIndex, valor) => {\r\n    setRespuestas((prev) => ({\r\n      ...prev,\r\n      [`${faseIndex}-${preguntaIndex}`]: valor\r\n    }));\r\n  };\r\n\r\n  const validarRespuestas = () => {\r\n    const preguntas = fases[faseActual].preguntas;\r\n    const erroresTemp = [];\r\n\r\n    preguntas.forEach((_, i) => {\r\n      const valor = respuestas[`${faseActual}-${i}`];\r\n      if (!valor || valor.trim() === \"\") {\r\n        erroresTemp.push(i);\r\n      }\r\n    });\r\n\r\n    setErrores(erroresTemp);\r\n    return erroresTemp.length === 0;\r\n  };\r\n\r\n  const avanzar = () => {\r\n    if (!validarRespuestas()) return;\r\n    const nuevaFase = faseActual + 1;\r\n    if (nuevaFase >= fases.length) {\r\n      setMostrarResumen(true);\r\n      return;\r\n    }\r\n    fetch(\"\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ faseActual: nuevaFase })\r\n    }).then(() => {\r\n      setFaseActual(nuevaFase);\r\n      setErrores([]);\r\n    });\r\n  };\r\n\r\n  const retroceder = () => {\r\n    const nuevaFase = faseActual - 1;\r\n    fetch(\"\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ faseActual: nuevaFase })\r\n    }).then(() => {\r\n      setFaseActual(nuevaFase);\r\n      setErrores([]);\r\n    });\r\n  };\r\n\r\n  if (mostrarResumen) {\r\n    return (\r\n      <div className=\"container\">\r\n        <h2 style={{ color: \"#073239\", fontFamily: \"'EB Garamond', serif\" }}>Gracias por completar la entrevista</h2>\r\n        <p style={{ fontFamily: \"'EB Garamond', serif\" }}>Tu información ha sido registrada. Pronto te contactaremos.</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const fase = fases[faseActual];\r\n\r\n  // Verificar si la fase es válida\r\n  if (!fase) {\r\n    return (\r\n      <div className=\"container\">\r\n        <h2>Error: Fase no encontrada.</h2>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div style={{ backgroundColor: \"#bdbaba\" }}>\r\n\r\n\r\n      <div className=\"container\" style={{ padding: \"20px\" }}>\r\n        <h1 style={{ color: \"#18323f\", fontFamily: \"'EB Garamond', serif\" }}>Fase {faseActual + 1}: {fase.nombre}</h1>\r\n        <hr />\r\n\r\n        <div className=\"preguntas\" style={{ backgroundColor: \"#bdbaba\", padding: \"20px\", borderRadius: \"5px\", color: \"#f1a523\" }}>\r\n          {fase.preguntas.map((pregunta, i) => {\r\n            const key = `${faseActual}-${i}`;\r\n            const valor = respuestas[key] || \"\";\r\n\r\n            return (\r\n<div key={i} style={{\r\n  marginBottom: 20,\r\n  backgroundColor: \"#30685d\", // nuevo fondo de la tarjeta\r\n  padding: \"20px\",\r\n  borderRadius: \"5px\",\r\n  boxShadow: \"0 2px 5px rgba(0,0,0,0.1)\"\r\n}}>\r\n  <p><strong style={{\r\n    color: \"#18323f\", // gris claro para el título\r\n    fontFamily: \"'EB Garamond', serif\"\r\n  }}>\r\n    Pregunta {i + 1} de {fase.preguntas.length}\r\n  </strong></p>\r\n  <label style={{\r\n    color: \"#073239\", // blanco para la pregunta\r\n    fontFamily: \"'EB Garamond', serif\"\r\n  }}>\r\n    {pregunta.texto}\r\n  </label>\r\n\r\n\r\n\r\n                {pregunta.tipo === \"texto\" && (\r\n                  <input\r\n                    type=\"text\"\r\n                    className={`campo ${errores.includes(i) ? \"error\" : \"\"}`}\r\n                    value={valor}\r\n                    onChange={(e) => handleRespuesta(faseActual, i, e.target.value)}\r\n                    style={{\r\n                      width: \"100%\",\r\n                      padding: \"10px\",\r\n                      borderRadius: \"5px\",\r\n                      border: `1px solid ${errores.includes(i) ? \"red\" : \"#ccc\"}`,\r\n                      marginTop: \"5px\"\r\n                    }}\r\n                  />\r\n                )}\r\n\r\n                {pregunta.tipo === \"seleccion\" && (\r\n                  <select\r\n                    className={`campo ${errores.includes(i) ? \"error\" : \"\"}`}\r\n                    value={valor}\r\n                    onChange={(e) => handleRespuesta(faseActual, i, e.target.value)}\r\n                    style={{\r\n                      width: \"100%\",\r\n                      padding: \"10px\",\r\n                      borderRadius: \"5px\",\r\n                      border: `1px solid ${errores.includes(i) ? \"red\" : \"#ccc\"}`,\r\n                      marginTop: \"5px\"\r\n                    }}\r\n                  >\r\n                    <option value=\"\">-- Selecciona --</option>\r\n                    {pregunta.opciones.map((op, idx) => (\r\n                      <option key={idx} value={op}>{op}</option>\r\n                    ))}\r\n                  </select>\r\n                )}\r\n\r\n                {pregunta.tipo === \"radio\" && (\r\n                  <div>\r\n                    {pregunta.opciones.map((op, idx) => (\r\n                      <label key={idx} style={{ display: \"block\", marginTop: \"5px\", color: \"#073239\", fontFamily: \"'EB Garamond', serif\" }}>\r\n                        <input\r\n                          type=\"radio\"\r\n                          name={key}\r\n                          value={op}\r\n                          checked={valor === op}\r\n                          onChange={() => handleRespuesta(faseActual, i, op)}\r\n                        />\r\n                        {op}\r\n                      </label>\r\n                    ))}\r\n                  </div>\r\n                )}\r\n\r\n                {errores.includes(i) && (\r\n                  <div className=\"error-text\" style={{ color: \"red\" }}>Esta pregunta es obligatoria</div>\r\n                )}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n\r\n        <div className=\"botones\" style={{ marginTop: \"20px\" }}>\r\n          <button className=\"boton\" onClick={retroceder} disabled={faseActual === 0} style={{ marginRight: \"10px\", padding: \"10px 20px\", backgroundColor: \"#fddd92\", border: \"none\", borderRadius: \"5px\", cursor: \"pointer\", transition: \"background-color 0.3s\" }}>\r\n            Anterior\r\n          </button>\r\n          <button className=\"boton\" onClick={avanzar} style={{ padding: \"10px 20px\", backgroundColor: \"#fddd92\", border: \"none\", borderRadius: \"5px\", cursor: \"pointer\", transition: \"background-color 0.3s\" }}>\r\n            {faseActual === fases.length - 1 ? \"Finalizar\" : \"Siguiente\"}\r\n          </button>\r\n          <button\r\n            className=\"boton\"\r\n            onClick={() => {\r\n              fetch(\"\", {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify({ faseActual })\r\n              });\r\n              alert(\"Progreso guardado. Puedes continuar más tarde.\");\r\n            }}\r\n            style={{ marginLeft: \"10px\", padding: \"10px 20px\", backgroundColor: \"#fddd92\", border: \"none\", borderRadius: \"5px\", cursor: \"pointer\", transition: \"background-color 0.3s\" }}\r\n          >\r\n            Salir\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EntrevistaFases;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}