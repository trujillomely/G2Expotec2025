{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\majo2\\\\Downloads\\\\html-a-react\\\\src\\\\pages\\\\ServicesPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"../Fases.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fases = [{\n  nombre: \"Pre-entrevista\",\n  preguntas: [{\n    tipo: \"texto\",\n    texto: \"Nombre completo\"\n  }, {\n    tipo: \"texto\",\n    texto: \"¿Cuál es su edad?\"\n  }, {\n    tipo: \"radio\",\n    texto: \"Género\",\n    opciones: [\"Masculino\", \"Femenino\", \"Otro\"]\n  }, {\n    tipo: \"texto\",\n    texto: \"¿Cuál es tu lugar de residencia actual?\"\n  }, {\n    tipo: \"radio\",\n    texto: \"¿Cuál es tu estado civil?\",\n    opciones: [\"Soltero/a\", \"Casado/a\", \"Divorciado/a\", \"Viudo/a\"]\n  }, {\n    tipo: \"texto\",\n    texto: \"¿Tienes hijos?, ¿Cuántos y qué edades tienen?\"\n  }, {\n    tipo: \"texto\",\n    texto: \"¿Cuántas personas viven en tu hogar actualmente?\"\n  }, {\n    tipo: \"texto\",\n    texto: \"¿Tienes tatuajes? Si es así describe su ubicación\"\n  }, {\n    tipo: \"texto\",\n    texto: \"¿Tienes pircings? Si es así describe su ubicación\"\n  }, {\n    tipo: \"texto\",\n    texto: \"¿Qué te motiva o te inspira para seguir adelante?\"\n  }, {\n    tipo: \"texto\",\n    texto: \"¿Hablas algún otro idioma?, ¿Cómo lo manejas?\"\n  }, {\n    tipo: \"texto\",\n    texto: \"¿Tienes licencia de conducir?, ¿Qué tipo?\"\n  }]\n}, {\n  nombre: \"Entrevista Psicológica\",\n  preguntas: [{\n    tipo: \"texto\",\n    texto: \"¿Algún error importante que hayas cometido?\"\n  }, {\n    tipo: \"texto\",\n    texto: \"¿Cómo gestionas el estrés o la presión?\"\n  }, {\n    tipo: \"texto\",\n    texto: \"Describe un desafío significativo que hayas enfrentado\"\n  }, {\n    tipo: \"texto\",\n    texto: \"¿Cómo mantienes una actitud positiva ante percances?\"\n  }, {\n    tipo: \"texto\",\n    texto: \"¿Cómo reaccionas ante los fracasos?\"\n  }, {\n    tipo: \"texto\",\n    texto: \"¿Qué tipo de ambiente te hace sentir más productivo?\"\n  }, {\n    tipo: \"texto\",\n    texto: \"¿Cómo resuelves problemas complejos?\"\n  }, {\n    tipo: \"texto\",\n    texto: \"Describe un error importante que has cometido\"\n  }, {\n    tipo: \"texto\",\n    texto: \"¿Cómo manejas las críticas injustas?\"\n  }, {\n    tipo: \"texto\",\n    texto: \"¿Qué haces si no estás de acuerdo con tu superior?\"\n  }, {\n    tipo: \"texto\",\n    texto: \"¿Cómo manejas los cambios inesperados en el trabajo?\"\n  }]\n}, {\n  nombre: \"Experiencia Laboral\",\n  preguntas: [{\n    tipo: \"texto\",\n    texto: \"¿Cuál ha sido tu mayor logro profesional o académico?\"\n  }, {\n    tipo: \"texto\",\n    texto: \"¿Cómo aseguras la calidad de tu trabajo?\"\n  }, {\n    tipo: \"texto\",\n    texto: \"Describe tu experiencia laboral más relevante\"\n  }, {\n    tipo: \"texto\",\n    texto: \"¿Qué habilidades desarrollaste en tu último empleo?\"\n  }, {\n    tipo: \"texto\",\n    texto: \"¿Cómo gestionas interrupciones en la jornada laboral?\"\n  }, {\n    tipo: \"texto\",\n    texto: \"¿Cómo organizas tus prioridades y tareas?\"\n  }, {\n    tipo: \"texto\",\n    texto: \"¿Qué estrategia usas para mantener la concentración?\"\n  }, {\n    tipo: \"texto\",\n    texto: \"¿Tenías buena relación con compañeros y jefes?\"\n  }, {\n    tipo: \"texto\",\n    texto: \"¿Cómo manejas información confidencial?\"\n  }, {\n    tipo: \"texto\",\n    texto: \"¿Manejas bien entregas urgentes de trabajo?\"\n  }, {\n    tipo: \"texto\",\n    texto: \"¿Has capacitado a otras personas?\"\n  }]\n}, {\n  nombre: \"Puesto y la Empresa\",\n  preguntas: [{\n    tipo: \"texto\",\n    texto: \"¿Qué te atrae de esta oportunidad laboral?\"\n  }, {\n    tipo: \"texto\",\n    texto: \"¿Cómo encajan tus habilidades en este puesto?\"\n  }, {\n    tipo: \"texto\",\n    texto: \"¿Qué valor crees aportar a la empresa?\"\n  }, {\n    tipo: \"texto\",\n    texto: \"¿Cómo priorizas objetivos ante múltiples tareas?\"\n  }, {\n    tipo: \"texto\",\n    texto: \"¿Qué impacto esperas tener el primer año?\"\n  }, {\n    tipo: \"texto\",\n    texto: \"¿Qué es lo más importante en tu próximo empleo?\"\n  }, {\n    tipo: \"texto\",\n    texto: \"¿Qué expectativas tienes de nuestra empresa?\"\n  }, {\n    tipo: \"texto\",\n    texto: \"¿Cómo te adaptarías a este estilo de rol?\"\n  }, {\n    tipo: \"texto\",\n    texto: \"¿Cómo defines un entorno de trabajo ideal?\"\n  }, {\n    tipo: \"texto\",\n    texto: \"¿Cómo manejas la expectativa de tu supervisor?\"\n  }, {\n    tipo: \"texto\",\n    texto: \"¿Qué tomarías en cuenta sobre tu próximo empleo?\"\n  }]\n}];\nconst EntrevistaFases = () => {\n  _s();\n  const [faseActual, setFaseActual] = useState(0);\n  const [respuestas, setRespuestas] = useState({});\n  const [errores, setErrores] = useState([]);\n  const [mostrarResumen, setMostrarResumen] = useState(false);\n  useEffect(() => {\n    fetch(\"\").then(res => res.json()).then(data => setFaseActual(data.faseActual || 0));\n  }, []);\n  useEffect(() => {\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\"\n    });\n  }, [faseActual]);\n  const handleRespuesta = (faseIndex, preguntaIndex, valor) => {\n    setRespuestas(prev => ({\n      ...prev,\n      [`${faseIndex}-${preguntaIndex}`]: valor\n    }));\n  };\n  const validarRespuestas = () => {\n    const preguntas = fases[faseActual].preguntas;\n    const erroresTemp = [];\n    preguntas.forEach((_, i) => {\n      const valor = respuestas[`${faseActual}-${i}`];\n      if (!valor || valor.trim() === \"\") {\n        erroresTemp.push(i);\n      }\n    });\n    setErrores(erroresTemp);\n    return erroresTemp.length === 0;\n  };\n  const avanzar = () => {\n    if (!validarRespuestas()) return;\n    const nuevaFase = faseActual + 1;\n    if (nuevaFase >= fases.length) {\n      setMostrarResumen(true);\n      return;\n    }\n    fetch(\"\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        faseActual: nuevaFase\n      })\n    }).then(() => {\n      setFaseActual(nuevaFase);\n      setErrores([]);\n    });\n  };\n  const retroceder = () => {\n    const nuevaFase = faseActual - 1;\n    fetch(\"\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        faseActual: nuevaFase\n      })\n    }).then(() => {\n      setFaseActual(nuevaFase);\n      setErrores([]);\n    });\n  };\n  if (mostrarResumen) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Gracias por completar la entrevista\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Tu informaci\\xF3n ha sido registrada. Pronto te contactaremos.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this);\n  }\n  const fase = fases[faseActual];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-bar-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar\",\n        style: {\n          width: `${(faseActual + 1) / fases.length * 100}%`,\n          backgroundColor: \"#073239\",\n          height: \"10px\",\n          borderRadius: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Fase \", faseActual + 1, \": \", fase.nombre]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preguntas\",\n      children: fase.preguntas.map((pregunta, i) => {\n        const key = `${faseActual}-${i}`;\n        const valor = respuestas[key] || \"\";\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: 20\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [\"Pregunta \", i + 1, \" de \", fase.preguntas.length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 18\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: pregunta.texto\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this), pregunta.tipo === \"texto\" && /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: `campo ${errores.includes(i) ? \"error\" : \"\"}`,\n            value: valor,\n            onChange: e => handleRespuesta(faseActual, i, e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 17\n          }, this), pregunta.tipo === \"seleccion\" && /*#__PURE__*/_jsxDEV(\"select\", {\n            className: `campo ${errores.includes(i) ? \"error\" : \"\"}`,\n            value: valor,\n            onChange: e => handleRespuesta(faseActual, i, e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"-- Selecciona --\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 19\n            }, this), pregunta.opciones.map((op, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: op,\n              children: op\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 17\n          }, this), pregunta.tipo === \"radio\" && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: pregunta.opciones.map((op, idx) => /*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                display: \"block\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: key,\n                value: op,\n                checked: valor === op,\n                onChange: () => handleRespuesta(faseActual, i, op)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 23\n              }, this), op]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 17\n          }, this), errores.includes(i) && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-text\",\n            children: \"Esta pregunta es obligatoria\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 17\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"botones\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"boton\",\n        onClick: retroceder,\n        disabled: faseActual === 0,\n        children: \"Anterior\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"boton\",\n        onClick: avanzar,\n        children: faseActual === fases.length - 1 ? \"Finalizar\" : \"Siguiente\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"boton\",\n        onClick: () => {\n          fetch(\"\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              faseActual\n            })\n          });\n          alert(\"Progreso guardado. Puedes continuar más tarde.\");\n        },\n        children: \"Salir\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n};\n_s(EntrevistaFases, \"5mz8Y4NH5+Gv8VMTJBzNQ7V2h20=\");\n_c = EntrevistaFases;\nexport default EntrevistaFases;\nvar _c;\n$RefreshReg$(_c, \"EntrevistaFases\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","fases","nombre","preguntas","tipo","texto","opciones","EntrevistaFases","_s","faseActual","setFaseActual","respuestas","setRespuestas","errores","setErrores","mostrarResumen","setMostrarResumen","fetch","then","res","json","data","window","scrollTo","top","behavior","handleRespuesta","faseIndex","preguntaIndex","valor","prev","validarRespuestas","erroresTemp","forEach","_","i","trim","push","length","avanzar","nuevaFase","method","headers","body","JSON","stringify","retroceder","className","children","fileName","_jsxFileName","lineNumber","columnNumber","fase","style","width","backgroundColor","height","borderRadius","map","pregunta","key","marginBottom","type","includes","value","onChange","e","target","op","idx","display","name","checked","onClick","disabled","alert","_c","$RefreshReg$"],"sources":["C:/Users/majo2/Downloads/html-a-react/src/pages/ServicesPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"../Fases.css\";\r\n\r\nconst fases = [\r\n  {\r\n    nombre: \"Pre-entrevista\",\r\n    preguntas: [\r\n      { tipo: \"texto\", texto: \"Nombre completo\" },\r\n      { tipo: \"texto\", texto: \"¿Cuál es su edad?\" },\r\n      {\r\n        tipo: \"radio\",\r\n        texto: \"Género\",\r\n        opciones: [\"Masculino\", \"Femenino\", \"Otro\"]\r\n      },\r\n      { tipo: \"texto\", texto: \"¿Cuál es tu lugar de residencia actual?\" },\r\n      {\r\n        tipo: \"radio\",\r\n        texto: \"¿Cuál es tu estado civil?\",\r\n        opciones: [\"Soltero/a\", \"Casado/a\", \"Divorciado/a\", \"Viudo/a\"]\r\n      },\r\n      { tipo: \"texto\", texto: \"¿Tienes hijos?, ¿Cuántos y qué edades tienen?\" },\r\n      { tipo: \"texto\", texto: \"¿Cuántas personas viven en tu hogar actualmente?\" },\r\n      { tipo: \"texto\", texto: \"¿Tienes tatuajes? Si es así describe su ubicación\" },\r\n      { tipo: \"texto\", texto: \"¿Tienes pircings? Si es así describe su ubicación\" },\r\n      { tipo: \"texto\", texto: \"¿Qué te motiva o te inspira para seguir adelante?\" },\r\n      { tipo: \"texto\", texto: \"¿Hablas algún otro idioma?, ¿Cómo lo manejas?\" },\r\n      { tipo: \"texto\", texto: \"¿Tienes licencia de conducir?, ¿Qué tipo?\" }\r\n    ]\r\n  },\r\n  {\r\n    nombre: \"Entrevista Psicológica\",\r\n    preguntas: [\r\n      { tipo: \"texto\", texto: \"¿Algún error importante que hayas cometido?\" },\r\n      { tipo: \"texto\", texto: \"¿Cómo gestionas el estrés o la presión?\" },\r\n      { tipo: \"texto\", texto: \"Describe un desafío significativo que hayas enfrentado\" },\r\n      { tipo: \"texto\", texto: \"¿Cómo mantienes una actitud positiva ante percances?\" },\r\n      { tipo: \"texto\", texto: \"¿Cómo reaccionas ante los fracasos?\" },\r\n      { tipo: \"texto\", texto: \"¿Qué tipo de ambiente te hace sentir más productivo?\" },\r\n      { tipo: \"texto\", texto: \"¿Cómo resuelves problemas complejos?\" },\r\n      { tipo: \"texto\", texto: \"Describe un error importante que has cometido\" },\r\n      { tipo: \"texto\", texto: \"¿Cómo manejas las críticas injustas?\" },\r\n      { tipo: \"texto\", texto: \"¿Qué haces si no estás de acuerdo con tu superior?\" },\r\n      { tipo: \"texto\", texto: \"¿Cómo manejas los cambios inesperados en el trabajo?\" }\r\n    ]\r\n  },\r\n  {\r\n    nombre: \"Experiencia Laboral\",\r\n    preguntas: [\r\n      { tipo: \"texto\", texto: \"¿Cuál ha sido tu mayor logro profesional o académico?\" },\r\n      { tipo: \"texto\", texto: \"¿Cómo aseguras la calidad de tu trabajo?\" },\r\n      { tipo: \"texto\", texto: \"Describe tu experiencia laboral más relevante\" },\r\n      { tipo: \"texto\", texto: \"¿Qué habilidades desarrollaste en tu último empleo?\" },\r\n      { tipo: \"texto\", texto: \"¿Cómo gestionas interrupciones en la jornada laboral?\" },\r\n      { tipo: \"texto\", texto: \"¿Cómo organizas tus prioridades y tareas?\" },\r\n      { tipo: \"texto\", texto: \"¿Qué estrategia usas para mantener la concentración?\" },\r\n      { tipo: \"texto\", texto: \"¿Tenías buena relación con compañeros y jefes?\" },\r\n      { tipo: \"texto\", texto: \"¿Cómo manejas información confidencial?\" },\r\n      { tipo: \"texto\", texto: \"¿Manejas bien entregas urgentes de trabajo?\" },\r\n      { tipo: \"texto\", texto: \"¿Has capacitado a otras personas?\" }\r\n    ]\r\n  },\r\n  {\r\n    nombre: \"Puesto y la Empresa\",\r\n    preguntas: [\r\n      { tipo: \"texto\", texto: \"¿Qué te atrae de esta oportunidad laboral?\" },\r\n      { tipo: \"texto\", texto: \"¿Cómo encajan tus habilidades en este puesto?\" },\r\n      { tipo: \"texto\", texto: \"¿Qué valor crees aportar a la empresa?\" },\r\n      { tipo: \"texto\", texto: \"¿Cómo priorizas objetivos ante múltiples tareas?\" },\r\n      { tipo: \"texto\", texto: \"¿Qué impacto esperas tener el primer año?\" },\r\n      { tipo: \"texto\", texto: \"¿Qué es lo más importante en tu próximo empleo?\" },\r\n      { tipo: \"texto\", texto: \"¿Qué expectativas tienes de nuestra empresa?\" },\r\n      { tipo: \"texto\", texto: \"¿Cómo te adaptarías a este estilo de rol?\" },\r\n      { tipo: \"texto\", texto: \"¿Cómo defines un entorno de trabajo ideal?\" },\r\n      { tipo: \"texto\", texto: \"¿Cómo manejas la expectativa de tu supervisor?\" },\r\n      { tipo: \"texto\", texto: \"¿Qué tomarías en cuenta sobre tu próximo empleo?\" }\r\n    ]\r\n  }\r\n];\r\n\r\nconst EntrevistaFases = () => {\r\n  const [faseActual, setFaseActual] = useState(0);\r\n  const [respuestas, setRespuestas] = useState({});\r\n  const [errores, setErrores] = useState([]);\r\n  const [mostrarResumen, setMostrarResumen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetch(\"\")\r\n      .then((res) => res.json())\r\n      .then((data) => setFaseActual(data.faseActual || 0));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n  }, [faseActual]);\r\n\r\n  const handleRespuesta = (faseIndex, preguntaIndex, valor) => {\r\n    setRespuestas((prev) => ({\r\n      ...prev,\r\n      [`${faseIndex}-${preguntaIndex}`]: valor\r\n    }));\r\n  };\r\n\r\n  const validarRespuestas = () => {\r\n    const preguntas = fases[faseActual].preguntas;\r\n    const erroresTemp = [];\r\n\r\n    preguntas.forEach((_, i) => {\r\n      const valor = respuestas[`${faseActual}-${i}`];\r\n      if (!valor || valor.trim() === \"\") {\r\n        erroresTemp.push(i);\r\n      }\r\n    });\r\n\r\n    setErrores(erroresTemp);\r\n    return erroresTemp.length === 0;\r\n  };\r\n\r\n  const avanzar = () => {\r\n    if (!validarRespuestas()) return;\r\n    const nuevaFase = faseActual + 1;\r\n    if (nuevaFase >= fases.length) {\r\n      setMostrarResumen(true);\r\n      return;\r\n    }\r\n    fetch(\"\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ faseActual: nuevaFase })\r\n    }).then(() => {\r\n      setFaseActual(nuevaFase);\r\n      setErrores([]);\r\n    });\r\n  };\r\n\r\n  const retroceder = () => {\r\n    const nuevaFase = faseActual - 1;\r\n    fetch(\"\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ faseActual: nuevaFase })\r\n    }).then(() => {\r\n      setFaseActual(nuevaFase);\r\n      setErrores([]);\r\n    });\r\n  };\r\n\r\n  if (mostrarResumen) {\r\n    return (\r\n      <div className=\"container\">\r\n        <h2>Gracias por completar la entrevista</h2>\r\n        <p>Tu información ha sido registrada. Pronto te contactaremos.</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const fase = fases[faseActual];\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"progress-bar-container\">\r\n        <div\r\n          className=\"progress-bar\"\r\n          style={{\r\n            width: `${((faseActual + 1) / fases.length) * 100}%`,\r\n            backgroundColor: \"#073239\",\r\n            height: \"10px\",\r\n            borderRadius: \"10px\"\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      <h1>Fase {faseActual + 1}: {fase.nombre}</h1>\r\n      <hr />\r\n\r\n      <div className=\"preguntas\">\r\n        {fase.preguntas.map((pregunta, i) => {\r\n          const key = `${faseActual}-${i}`;\r\n          const valor = respuestas[key] || \"\";\r\n\r\n          return (\r\n            <div key={i} style={{ marginBottom: 20 }}>\r\n              <p><strong>Pregunta {i + 1} de {fase.preguntas.length}</strong></p>\r\n              <label>{pregunta.texto}</label>\r\n\r\n              {pregunta.tipo === \"texto\" && (\r\n                <input\r\n                  type=\"text\"\r\n                  className={`campo ${errores.includes(i) ? \"error\" : \"\"}`}\r\n                  value={valor}\r\n                  onChange={(e) => handleRespuesta(faseActual, i, e.target.value)}\r\n                />\r\n              )}\r\n\r\n              {pregunta.tipo === \"seleccion\" && (\r\n                <select\r\n                  className={`campo ${errores.includes(i) ? \"error\" : \"\"}`}\r\n                  value={valor}\r\n                  onChange={(e) => handleRespuesta(faseActual, i, e.target.value)}\r\n                >\r\n                  <option value=\"\">-- Selecciona --</option>\r\n                  {pregunta.opciones.map((op, idx) => (\r\n                    <option key={idx} value={op}>{op}</option>\r\n                  ))}\r\n                </select>\r\n              )}\r\n\r\n              {pregunta.tipo === \"radio\" && (\r\n                <div>\r\n                  {pregunta.opciones.map((op, idx) => (\r\n                    <label key={idx} style={{ display: \"block\" }}>\r\n                      <input\r\n                        type=\"radio\"\r\n                        name={key}\r\n                        value={op}\r\n                        checked={valor === op}\r\n                        onChange={() => handleRespuesta(faseActual, i, op)}\r\n                      />\r\n                      {op}\r\n                    </label>\r\n                  ))}\r\n                </div>\r\n              )}\r\n\r\n              {errores.includes(i) && (\r\n                <div className=\"error-text\">Esta pregunta es obligatoria</div>\r\n              )}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      <div className=\"botones\">\r\n        <button className=\"boton\" onClick={retroceder} disabled={faseActual === 0}>\r\n          Anterior\r\n        </button>\r\n        <button className=\"boton\" onClick={avanzar}>\r\n          {faseActual === fases.length - 1 ? \"Finalizar\" : \"Siguiente\"}\r\n        </button>\r\n        <button\r\n          className=\"boton\"\r\n          onClick={() => {\r\n            fetch(\"\", {\r\n              method: \"POST\",\r\n              headers: { \"Content-Type\": \"application/json\" },\r\n              body: JSON.stringify({ faseActual })\r\n            });\r\n            alert(\"Progreso guardado. Puedes continuar más tarde.\");\r\n          }}\r\n        >\r\n          Salir\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EntrevistaFases;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}